@prefix schema: <http://schema.org/> .
@prefix ex:    <http://topbraid.org/examples/shaclsquare#> .
@prefix sh:    <http://www.w3.org/ns/shacl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix arg:   <http://www.w3.org/ns/shacl/arg#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .

schema:Person  a         sh:ShapeClass ;
        rdfs:label       "Person" ;
        rdfs:subClassOf  rdfs:Resource ;
        sh:property      [ rdfs:comment  "Zero or more email addresses of the person." ;
                           rdfs:label    "email" ;
                           sh:datatype   xsd:string ;
                           sh:predicate  schema:email
                         ] .

ex:InvalidSquare  a  ex:Square ;
        rdfs:label  "Invalid square" ;
        ex:creator  ex:PersonWithoutEmail ;
        ex:height   8 ;
        ex:width    9 .

ex:computeArea  a      sh:Function ;
        rdfs:comment   "Computes the area of a given rectangle (?arg1) as the product of its width and height." ;
        rdfs:label     "compute area" ;
        sh:argument    [ rdfs:comment  "The rectangle whose area to compute." ;
                         sh:class      ex:Rectangle ;
                         sh:predicate  sh:arg1
                       ] ;
        sh:returnType  xsd:integer ;
        sh:sparql      "\n\t\tSELECT ((?width * ?height) AS ?result)\n\t\tWHERE {\n\t\t\t?arg1 ex:width ?width .\n\t\t\t?arg1 ex:height ?height .\n\t\t}\n\t\t" .

ex:Rectangle  a          sh:ShapeClass ;
        rdfs:label       "Rectangle" ;
        rdfs:subClassOf  rdfs:Resource ;
        sh:constraint    [ a             ex:PositivePropertyValueConstraint ;
                           arg:property  ex:width
                         ] ;
        sh:constraint    [ a             ex:PositivePropertyValueConstraint ;
                           arg:property  ex:height
                         ] ;
        sh:property      [ rdfs:comment  "The width of the Rectangle." ;
                           rdfs:label    "width" ;
                           sh:datatype   xsd:integer ;
                           sh:maxCount   1 ;
                           sh:minCount   1 ;
                           sh:predicate  ex:width
                         ] ;
        sh:property      [ rdfs:comment  "The height of the Rectangle." ;
                           rdfs:label    "height" ;
                           sh:datatype   xsd:integer ;
                           sh:maxCount   1 ;
                           sh:minCount   1 ;
                           sh:predicate  ex:height
                         ] ;
        sh:property      [ rdfs:comment   "The creator of the Rectangle." ;
                           rdfs:label     "creator" ;
                           sh:class       schema:Person ;
                           sh:maxCount    1 ;
                           sh:predicate   ex:creator ;
                           sh:valueShape  [ sh:property  [ sh:minCount   1 ;
                                                           sh:predicate  schema:email
                                                         ] ]
                         ] .

ex:PositivePropertyValueConstraint
        a                 sh:ConstraintTemplate ;
        rdfs:comment      "A template that can be used to define a SHACL constraint on a given property (arg:property) to make sure that the values of that property are > 0." ;
        rdfs:label        "Positive property value constraint" ;
        rdfs:subClassOf   sh:TemplateConstraint ;
        sh:argument       [ rdfs:comment  "The property to constrain (e.g. ex:width or ex:height)." ;
                            rdfs:label    "property" ;
                            sh:class      rdfs:Resource ;
                            sh:predicate  arg:property
                          ] ;
        sh:labelTemplate  "Values of property {?property} must be > 0" ;
        sh:message        "Property {?property} must only have positive values, but found {?object}" ;
        sh:sparql         "\n\t\tSELECT ?this (?this AS ?subject) (?property AS ?predicate) ?object ?property\n\t\tWHERE {\n\t\t\t?this ?property ?object .\n\t\t\tFILTER (?object <= 0) .\n\t\t}\n\t\t" .

ex:Square  a             sh:ShapeClass ;
        rdfs:label       "Square" ;
        rdfs:subClassOf  ex:Rectangle ;
        sh:constraint    [ a             sh:SPARQLConstraint ;
                           sh:message    "Width and height of a Square must be equal" ;
                           sh:predicate  ex:width ;
                           sh:sparql     "\n\t\t\tSELECT ?this (?this AS ?subject) (?width AS ?object)\n\t\t\tWHERE {\n\t\t\t\t?this ex:width ?width .\n\t\t\t\t?this ex:height ?height .\n\t\t\t\tFILTER (?width != ?height) .\n\t\t\t}\n\t\t\t"
                         ] .

ex:PersonWithoutEmail
        a       schema:Person .

ex:TestRectangle  a  ex:Rectangle ;
        rdfs:label  "Test rectangle" ;
        ex:creator  ex:PersonWithEmail ;
        ex:height   6 ;
        ex:width    7 .

<http://topbraid.org/examples/shaclsquare>
        a               sh:Graph ;
        rdfs:comment    "A simple example model demonstrating some key features of SHACL. Have a look at the ex:computeArea function, the rule attached to ex:Rectangle and the constraint attached to ex:Square." ;
        rdfs:label      "SHACL Square Example" ;
        sh:shapesGraph  <http://www.w3.org/ns/shacl> .

ex:PersonWithEmail  a  schema:Person ;
        schema:email  "john@example.com" .
